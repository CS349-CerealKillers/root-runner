package com.cerealkillers.rootrunner;/** * Proof of concept for dropping an animated sprite into a scene * */import org.andengine.engine.camera.Camera;import org.andengine.engine.options.EngineOptions;import org.andengine.engine.options.ScreenOrientation;import org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy;import org.andengine.entity.scene.Scene;import org.andengine.opengl.texture.TextureOptions;import org.andengine.entity.scene.background.Background;import org.andengine.entity.sprite.AnimatedSprite;import org.andengine.entity.util.FPSLogger;import org.andengine.opengl.texture.TextureOptions;import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas;import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory;import org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas;import org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource;import org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder;import org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder;import org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder.TextureAtlasBuilderException;import org.andengine.opengl.texture.region.TiledTextureRegion;import org.andengine.ui.activity.SimpleBaseGameActivity;import org.andengine.opengl.texture.region.TiledTextureRegion;import org.andengine.util.debug.Debug;public class MainActivity extends SimpleBaseGameActivity {    private Camera camera;    private static final int CAMERA_WIDTH = 800;    private static final int CAMERA_HEIGHT = 480;    // sprite stuff    private BuildableBitmapTextureAtlas mBitmapTextureAtlas;    private TiledTextureRegion mBananaTextureRegion;    @Override    public EngineOptions onCreateEngineOptions() {        camera = new Camera(0,0,CAMERA_WIDTH,CAMERA_HEIGHT);        EngineOptions engineOptions = new EngineOptions(true, ScreenOrientation.LANDSCAPE_FIXED,                new RatioResolutionPolicy(CAMERA_WIDTH,CAMERA_HEIGHT), camera);        return engineOptions;    }    @Override    public void onCreateResources() {        // create sprite resources        //BitmapTextureAtlasTextureRegionFactory.setAssetBasePath("assets/");        this.mBitmapTextureAtlas = new BuildableBitmapTextureAtlas(this.getTextureManager(), 512, 256, TextureOptions.NEAREST);        this.mBananaTextureRegion = BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(this.mBitmapTextureAtlas,this,"banana_tiled.png",4,2);        try {            this.mBitmapTextureAtlas.build(new BlackPawnTextureAtlasBuilder<IBitmapTextureAtlasSource, BitmapTextureAtlas>(0, 0, 1));            this.mBitmapTextureAtlas.load();        }catch(TextureAtlasBuilderException e) {            Debug.e(e);        }    }    @Override    public Scene onCreateScene() {        this.mEngine.registerUpdateHandler(new FPSLogger());        final Scene scene = new Scene();        scene.setBackground(new Background(0.09804f, 0.6274f, 0.8784f));        final AnimatedSprite banana = new AnimatedSprite(100, 220, this.mBananaTextureRegion, this.getVertexBufferObjectManager());        banana.animate(100);        scene.attachChild(banana);        return scene;    }}